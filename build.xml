<project name="video-rental-application"
         default="build"
         xmlns:ivy = "antlib:org.apache.ivy.ant">

    <!--Build properties -->
    <property name="src.dir" location="src/main/java"/>
    <property name="test.src.dir" location="src/test/java"/>
    <property name="build.dir" location="build"/>
    <property name="classes.dir" location="${build.dir}/classes"/>
    <property name="doc.dir" location="${build.dir}/doc"/>
    <property name="test.classes.dir" location="${build.dir}/test-classes"/>
    <property name="ivy.reports.dir"  location="${build.dir}/ivy-reports"/>
    <property name="test.reports.dir"  location="${build.dir}/test-reports"/>
    <property file="build.properties" location="build.properties"/>

    <!--Initialize build process-->
    <target name="init" description="resolve dependencies">
        <ivy:resolve/>
        <ivy:report todir='${ivy.reports.dir}' graph='false' xml='false'/>
        <ivy:cachepath pathid="compile.path" conf="compile"/>
        <ivy:cachepath pathid="runtime.path" conf="runtime"/>
        <ivy:cachepath pathid="test.path"    conf="test"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${test.reports.dir}"/>
    </target>

    <!--Compile-->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${classes.dir}"
               includeantruntime="false" debug="true" classpathref="compile.path"/>
    </target>

    <target name="compile-tests" depends="compile">
        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" includeantruntime="false" debug="true">
            <classpath>
                <path refid="test.path"/>
                <pathelement path="${classes.dir}"/>
            </classpath>
        </javac>
    </target>

    <!--Run unit tests-->
    <target name="test" depends="compile-tests">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <path refid="test.path"/>
                <pathelement path="${classes.dir}"/>
                <pathelement path="${test.classes.dir}"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${test.reports.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Build   -->
    <target name="build" depends="test"/>

    <!-- Run the application -->
    <target name="run" depends="compile">
        <java classname="com.video.rental.app.Main">
            <classpath>
                <path refid="runtime.path"/>
                <pathelement location="${classes.dir}"/>
            </classpath>
        </java>
    </target>

    <!-- Clean -->
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Create jar   -->
    <target name="build-jar" depends="build">
        <jar destfile="out/artifact/"
             basedir="${build.dir}" />
    </target>

    <!-- Generate java documentation   -->
    <target name="generate-javadoc">
        <javadoc packagenames="com.video.rental.app.*"
                 sourcepath="${src.dir}"
                 destdir="${doc.dir}"
                 version="${version}"
                 windowtitle="Video Rental Application Documentation">
            <fileset dir="."></fileset>
            <doctitle><![CDATA[= Test Documentation =]]></doctitle>
            <bottom>
                <![CDATA[Copyright Â© ${copyright.year}. All Rights Reserved.]]>
            </bottom>
        </javadoc>
        <echo message="java doc has been generated!" />
    </target>

</project>